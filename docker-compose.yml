version: "3.8"

services:
  web:
    container_name: web-dev
    image: web-dev
    build:
      context: ./web/
      target: development
    volumes:
      - ./web/src:/app/src
    ports:
      - 3000:3000

  server:
    container_name: server-dev
    image: server-dev
    build:
      context: ./server/
      target: development
    env_file:
      - .env
    volumes:
      - ./server:/app
    ports:
      - 8081:8081
    depends_on:
      - db

  db:
    image: postgres:13.2-alpine
    container_name: db-dev
    ports:
      - 5432:5432
    env_file:
      - .env

  fusiondb:
    image: postgres:13.2-alpine
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  fusionauth:
    image: fusionauth/fusionauth-app:1.40.2
    depends_on:
      fusiondb:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://fusiondb:5432/fusionauth
      DATABASE_ROOT_USERNAME: postgres
      DATABASE_ROOT_PASSWORD: 123456
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: 123456
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: http://fusionauth:9011
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config

  mailcatcher:
    image: yappabe/mailcatcher
    ports:
      - "1025:1025"
      - "1080:1080"

volumes:
  db_data:
  fusionauth_config:
