// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Omanosaura.Data;

#nullable disable

namespace omanosaura.Migrations
{
    [DbContext(typeof(OmanosauraContext))]
    [Migration("20240812135419_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("omanosaura.Models.StartEndDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("TripId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("StartEndDate");
                });

            modelBuilder.Entity("omanosaura.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AboutEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Itinerary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocationAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocationEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PriceBaisa")
                        .HasColumnType("integer");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("omanosaura.Models.StartEndDate", b =>
                {
                    b.HasOne("omanosaura.Models.Trip", null)
                        .WithMany("AvailableDates")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("omanosaura.Models.Trip", b =>
                {
                    b.Navigation("AvailableDates");
                });
#pragma warning restore 612, 618
        }
    }
}
